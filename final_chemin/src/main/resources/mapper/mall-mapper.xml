<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="mall">

	<resultMap type="map" id="mallMap"></resultMap>
	
	<select id="selectMember" parameterType="string" resultMap="mallMap">
 		select * from member_info where userId=#{userId}	
 	</select>
	
	<!-- 카테고리별 상품 리스트 -->
	<select id="selectCateList" parameterType="map" resultType="product">
		select pno, cno, pName, details, oriImg, reImg, price, pCount, sales, to_char(pDate,'YYYYMMDD') pDate, 
		case when pcount=0 then '1' end cnt_priority
		from product 
		where 1=1
		<if test="ctype!=null and ctype!=''">
			and cno=#{cno}
		</if>
		<if test="searchData!=null and searchData!=''">
			and pname like '%'||#{searchData}||'%'
		</if>
		<if test="lowValue!=null and lowValue!=''">
			and price <![CDATA[>=]]> #{lowValue}
		</if>
		<if test="highValue!=null and highValue!=''">
			and price <![CDATA[<=]]> #{highValue}
		</if>
		order by cnt_priority desc
		<if test="stype_h!=null and stype_h!=''">
			, sales desc
		</if>
		<if test="stype_n!=null and stype_n!=''">
			, pdate desc
		</if>
		<if test="stype_lv!=null and stype_lv!=''">
			, price
		</if>
		<if test="stype_hv!=null and stype_hv!=''">
			, price desc
		</if>
	</select>
	
	<!-- 총 상품 개수 -->
	<select id="selectCateCount" parameterType="map" resultType="_int">
		select count(*) from product
		where 1=1
		<if test="ctype!=null and ctype!=''">
			and cno=#{cno}
		</if>
		<if test="searchData!=null and searchData!=''">
			and pname like '%'||#{searchData}||'%'
		</if>
		<if test="lowValue!=null and lowValue!=''">
			and price <![CDATA[>=]]> #{lowValue}
		</if>
		<if test="highValue!=null and highValue!=''">
			and price <![CDATA[<=]]> #{highValue}
		</if>
	</select>
	
	<!-- pno로 상품 가져오기 -->
	<select id="selectProduct" parameterType="_int" resultType="product">
		select * from product where pno=#{pno}
	</select>
	
	<!-- 장바구니의 상품 가져오기 (존재여부 확인) -->
	<select id="selectCartItem" parameterType="map" resultType="cart">
		select * from cart where pno=#{pno} and userId=#{userId} and payYn='N'
	</select>
	
	<!-- 장바구니 추가 -->
	<insert id="insertCart" parameterType="map">
		insert into cart
		values(cart_seq.nextval, #{userId}, #{orderNo}, #{pno}, #{amount}, default, #{totalPrice}, default)
	</insert>

	<!-- 오래된 장바구니 데이터 삭제 -->
	<delete id="deleteOldCart">
		delete from cart 
		where payYn='N' and cDate <![CDATA[<=]]> to_char(sysdate-7,'YYYYMMDD')
	</delete>
	
	<!-- 장바구니 수량 변경 -->
	<update id="updateAmount" parameterType="map">
		update cart set amount=#{amount}, totalPrice=#{amount}*(select price from product where pno=#{pno})
		where userId=#{userId} and pno=#{pno} and payYn='N'
	</update>
	
	<!-- 장바구니 상품 삭제 -->
	<delete id="deleteCart" parameterType="map">
		delete from cart where userId=#{userId} and pno=#{pno} and payYn='N'
	</delete>
	
	<!-- 장바구니 데이터 가져오기 -->
	<select id="selectCartList" parameterType="string" resultMap="mallMap">
		select * from cart join product using(pno) 
		where userId=#{userId} and payYn='N'
	</select>
	
	<!-- 장바구니에 orderNo 추가 -->
	<update id="updateCartList" parameterType="map">
		update cart set orderNo=#{orderNo} 
		where userId=#{userId} and payYn='N'
	</update>
	
	<!-- 주문목록 추가 -->
	<insert id="insertOrder" parameterType="orderDetail">
		insert into orderdetail
		values(#{orderNo}, #{orderName}, #{orderPhone}, #{zipcode}, #{orderAddr}, #{payment}, #{allPrice}, #{orderNote}, default)
	</insert>

	<!-- 장바구니 구매 상태 y로 변경 -->
	<update id="updateCartNo" parameterType="map">
		update cart set payYn='Y' where userId=#{userId} and orderNo=#{orderNo}
	</update>
	
	<!-- 주문하려는 상품 가져오기 -->
	<select id="selectCartOrder" parameterType="map" resultType="cart">
		select * from cart where userId=#{userId} and orderNo=#{orderNo} and payYn='Y'
	</select>
	
	<!-- 상품 재고, 판매현황 처리 -->
	<update id="updateProduct" parameterType="map">
		update product
		set pcount=pcount-(select amount from cart where userId=#{userId} and orderNo=#{orderNo} and pno=#{pno}),
			sales=sales+(select amount from cart where userId=#{userId} and orderNo=#{orderNo} and pno=#{pno})
		where pno=#{pno}
	</update>
	
	<!-- 장바구니 상품 개수 -->
	<select id="selectCartCount" parameterType="string" resultType="_int">
		select count(*) from cart where userId=#{userId} and payYn='N'
	</select>
	
	<!-- 재고 확인 -->
	<select id="selectProductCount" parameterType="string" resultMap="mallMap">
		select * from cart join product using(pno) where userId=#{userId} and payYn='N'
	</select>
	
</mapper>
